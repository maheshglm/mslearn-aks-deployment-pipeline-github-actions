name: Build and push the latest build to staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        uses: docker/login-action@v1.10.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_REGISTRY }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
          # Log out from the Docker registry at the end of a job
          logout: false
          
      - name: Build and push staging image
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f
        uses: docker/build-push-action@v2
        with:
          # Here we'll have a list of parameters
          tags: ${{ secrets.ACR_REGISTRY }}/contoso-website:latest
          context: .
          push: true
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_push_image # Will wait for the execution of the previous job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Helm tool
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1 # default is latest
      
      - name: Azure k8s set context
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: mslearn-gh-pipelines-glm
          cluster-name: contoso-video

      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.registry=${{ secrets.ACR_REGISTRY }} \
            --set dns.name=${{ secrets.DNS_NAME }}





